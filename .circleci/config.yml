# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Main container image
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.6.3-jessie-ram

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v2-deps-{{ .Branch }}-
            - v2-deps-

      - run:
          name: Install graphicsmagick
          command: apt-get update && apt-get -y install graphicsmagick

      - run:
          name: Install node dependencies for nuxt test environments (e2e tests)
          command: cd tests/nuxt && npm install

      - run:
          name: Build nuxt test environments for node server and static server (e2e tests)
          command: npm run test:e2e:build && test:e2e:buildStatic

      - run:
          name: Serve nuxt test environment (server mode) (e2e tests)
          command: npm run test:e2e:serve
          background: true

      - run:
          name: Serve nuxt test environment (static mode) (e2e tests)
          command: npm run test:e2e:serveStatic
          background: true

      - run:
          name: Install node dependencies for module
          command: npm install

      - run:
          name: Run e2e tests
          command: npm run test:e2e:run

      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots

      - save_cache:
          key: v2-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache

    #   - run:
    #       name: Run tests and send coverage report to codecov
    #       command: npm run codecov-report
